<?php 

/**
 * @file
 * citygroups_vocabularies_install
 */

function citygroups_vocabularies_init() {

}

function citygroups_vocabularies_menu() {
  $items['admin/config/citygroups_vocabularies'] = array(
    'title' => 'Load & Update Vocabularies',
    'page callback' => 'citygroups_vocabularies_render',
    'page arguments' => array(t('Load & Update Vocabularies')),
    'access arguments' => array('administer taxonomy'),
    'type' => MENU_LOCAL_ACTION,
  );
  
  return $items;
}

function citygroups_vocabularies_render(){
  $vocabularies = array(
    'categories',
    'neighborhood',
    'zipcode',
    'state',
    'city',
    'audience_size',
    'activity_level',
    'type_group',
    'ownership',
  );
  
  $output = '';
  foreach($vocabularies as $vocabulary) {
    $output .= citygroups_vocabulary_build_vocabulary($vocabulary);
  }

  return '<h2>Load & Update Vocabularies</h2>' . $output;
}

function citygroups_vocabulary_build_vocabulary($vocabulary) {
  // Load vocabulary by name.
  
  // Create vocabulary if it does not already exist.
  // Note: the vocabularies are created in features.

  // Get vocabulary vid.
  $vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary);
  $output = '';

  // Process all vocabularies.
  // Load function based on vocabulary name.
  $function = __FUNCTION__ . '_' . $vocabulary->machine_name;
  // Show which terms are updated.
  if (function_exists($function)) {
    $output .= $function($vocabulary);
  }
  
  return $output;
}

function citygroups_vocabulary_build_terms($terms, &$vocabulary) {
  $output = '<h3>' . $vocabulary->name . '</h3>';
  foreach($terms as $term) {
    // Check if the term already exists.  
    $term_object = taxonomy_get_term_by_name($term);
    //dpm($term_object);
    
    if(empty($term_object)) {
      $term_object_create = (object) array(
        'name' => $term,
        'vid' => $vocabulary->vid,
        'description' => '', 
        'parent' => array(0), 
        'vocabulary_machine_name' => $vocabulary->machine_name,    
      );
      // Save new term.
      $saved = taxonomy_term_save($term_object_create);
      if($saved) {
        $output .= '<p>New term <em><strong>' . $term . '</strong></em> created.</p>';
      }
    }
    else {
      $output .= '<p><em>' . $term . '</em> already exists.</p>';
    }
  }
  return $output;
}

function citygroups_vocabulary_build_vocabulary_communication(&$vocabulary) {
  $terms = array(
    'Text message',
    'Press Release',
    'Video',
    'Audio',
    'Newsletter',    
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}
function citygroups_vocabulary_build_vocabulary_categories(&$vocabulary) {
 // dpm($vocabulary);
  // Simple array of terms.
  // @TODO this or else a CSV file.
  $terms = array(    

        
    'Community Concern',
    'Community Issue',
    'Incident',
    'Forum',
    'Meeting',
    'Public Place',
    'Town Hall meeting',
    'Festival',
    'Class',
    'Participatory Budget Meeting',
    'Neighborhood Walk',
    'Farmers\' Market',
    'Parade',
    'Group Meetup',
    'Council Meeting',    
      
    'Arts',
    'Association',
    'Block Watch',
    'Chamber of Commerce',

    'Clean Air',
    'Clean Water',
    'Climate Change',
    'Community Arts',
    'Community Association',
    'Community Club',
    'Community Council',
    'Community Group',
    'Community Health',
    'Community Health',
    'Community Organization',
    'Crime Prevention',
    'Criminal Activity',

    'Deceased',
    'Design for People',
    'Dining',
    'Disease Support',
    'District Council',
    'Diversity',

    'Education',
    'Emergencies',
    'Emergency Preparedness',
    'Environment',
    'Environmental Justice',

    'Good Food',
    'Governance Group',
    'Group',
    'Health Equity',
    'Healthy Homes',
    'Historical Society',
    'Housing',
    'Hyperlocal',
    'Industry',
    'Knitting',
    'Local',
    'Locally Made',

    'Neighborhood Alliance',
    'Neighborhood Association',
    'Neighborhood Council',
    'Neighborhood Group',
    'Nightlife',
    'Noise Reduction',
    'Non-Profit',

    'Place-Based Group',
    'Place',
    'Project-Based Group',
    'Public Safety',
    'Race and Social Justice',
    'Real Estate',
    'Recreation',
    'Road Development',
    'Selling',
    'Social Justice',
    'Sports',
    'Sustainability',
    'Sustainable Food',
    'Technology',
    'Topic-Based Group',
    'Traffic',
    'Urban Agriculture',
    'Watershed',   															
  );
  
  citygroups_vocabulary_build_vocabulary_demographics(&$vocabulary);
  
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_neighborhood(&$vocabulary) {
  $vocabulary_name = 'neighborhood';
  $terms = array(
/*     'Neighborhood', */
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_zipcode(&$vocabulary) {
  $vocabulary_name = 'zipcode';
  $terms = array(
/*     'Term', */
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_state(&$vocabulary) {
  $vocabulary_name = 'state';
  $terms = array(
    'WA',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}


function citygroups_vocabulary_build_vocabulary_county(&$vocabulary) {
  $vocabulary_name = 'county';
  $terms = array(
    'King County',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_demographics(&$vocabulary) {
  // This is a list of terms output from various systems.
  // Should provide list of cultural & personal statuses.
  // The idea is to have a big list of everything necessary for your city.
  
  $vocabulary_name = 'categories';
  
  $terms = array(
    'African',
    'African American',
    'Arab',
    'Asian',
    'Asian Pacific Islander',
    'Cambodian',
    'Caucasian',
    'Chinese',
    'East African',
    'Eastern European',
    'Eritrean',
    'Ethiopian',
    'Filipino',
    'First Nations',
    'Hmong',
    'Interracial',
    'Iraqi',
    'Japanese',
    'Jewish',
    'Khmer',
    'Korean',
    'Latino',
    'Muslim',
    'Native American',
    'Nepali',
    'Nordic',
    'Norwegian',
    'People of color',
    'Queer',
    'Samoan',
    'Somali',
    'Sudanese',
    'Taiwanese',
    'Transgender',
    'Turkish',
    'Vietnamese',
    
    'Homeowner',
    'Renter',
    'Homeless',
    'Parent',
    'Dependent',
    'Volunteer',
    'Neighbor',
    'Citizen',
    'Immigrant/Refugee',
    'Immigrant',
    'Refugee',
    'Samaritan',
    'Children',
    'Dads',
    'Divorced Families',
    'Family',
    'Moms',
    'Parents',    
    'Renters',   
    'Singles',    
    'Youth',
    'Seniors',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}


function citygroups_vocabulary_build_vocabulary_city(&$vocabulary) {
  $vocabulary_name = 'city';
  $terms = array(
    'Seattle',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_audience_size(&$vocabulary) {
  $vocabulary_name = 'audience_size';
  $terms = array(
    'Unknown',
    '1-10 People',
    '10-100 People',
    '10-25 People',
    '25-50 People',
    '50-100 People',
    '100-1,000 People',
    '1,000-10,000 People',
    '10,000-100,000 People',
    '100,000-1,000,000 People',
    'Over 1 Million People',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_activity_level(&$vocabulary) {
  $vocabulary_name = 'activity_level';
  $terms = array(
    'Occasionally',
    'Monthly',
    'Every Few Months',
    'Yearly',
    'Weekly',
    'Once a Week',
    'Daily',
    'Multiple Daily',
    'Apparently Inactive',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_type_group(&$vocabulary) {
  $vocabulary_name = 'type_group';
  $terms = array(
    'Blog',
    'Calendar',
    'Community News Blog',
    'Door-to-Door',   
    'Email',
    'Face-to-Face', 
    'Facebook',
    'Flyer',
    'Mailing List',
    'MySpace',
    'Online Group',
    'Neighbor-to-Neighbor Message',
    'Newsletter',
    'Newspaper',
    'Ning',
    'Twitter',
    'Website',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_ownership(&$vocabulary) {
  $vocabulary_name = 'ownership';
  $terms = array(
    'Business',
    'Commercial',
    'Communal',
    'Community',
    'Media',
    'Neighborhood',
    'Non-profit',
    'Personal/Private',
    'Shared',
    'Government',
    'Municipal',
    'State',
    'County',
    'Federal',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}

function citygroups_vocabulary_build_vocabulary_area_code(&$vocabulary) {
  $vocabulary_name = 'area_code';
  $terms = array(
    '206',
  );
  return citygroups_vocabulary_build_terms($terms, &$vocabulary);
}